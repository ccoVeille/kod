// Code generated by MockGen. DO NOT EDIT.
// Source: examples/snowflake/kod_gen_interface.go
//
// Generated by this command:
//
//	mockgen -source examples/snowflake/kod_gen_interface.go -destination examples/snowflake/kod_gen_mock.go -package snowflake
//

// Package snowflake is a generated GoMock package.
package snowflake

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockComponent is a mock of Component interface.
type MockComponent struct {
	ctrl     *gomock.Controller
	recorder *MockComponentMockRecorder
}

// MockComponentMockRecorder is the mock recorder for MockComponent.
type MockComponentMockRecorder struct {
	mock *MockComponent
}

// NewMockComponent creates a new mock instance.
func NewMockComponent(ctrl *gomock.Controller) *MockComponent {
	mock := &MockComponent{ctrl: ctrl}
	mock.recorder = &MockComponentMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockComponent) EXPECT() *MockComponentMockRecorder {
	return m.recorder
}

// NextID mocks base method.
func (m *MockComponent) NextID(ctx context.Context, req *NextIDRequest) (*NextIDResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NextID", ctx, req)
	ret0, _ := ret[0].(*NextIDResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NextID indicates an expected call of NextID.
func (mr *MockComponentMockRecorder) NextID(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NextID", reflect.TypeOf((*MockComponent)(nil).NextID), ctx, req)
}
